import type { Lang } from "./lang";
type LangMap = {
    [lang in Lang]: string;
};
type MessageMap = {
    [key in keyof typeof messages]: LangMap;
};
declare const messages: {
    Q_BaseUrl: {
        en: string;
        ja: string;
    };
    Q_UserName: {
        en: string;
        ja: string;
    };
    Q_Password: {
        en: string;
        ja: string;
    };
    Error: {
        en: string;
        ja: string;
    };
    Error_retry: {
        en: string;
        ja: string;
    };
    Error_invalidLang: {
        en: string;
        ja: string;
    };
    Error_requiredZipPath: {
        en: string;
        ja: string;
    };
    Error_failedLogin: {
        en: string;
        ja: string;
    };
    Error_cannotOpenLogin: {
        en: string;
        ja: string;
    };
    Error_adminPrivilege: {
        en: string;
        ja: string;
    };
    Uploaded: {
        en: string;
        ja: string;
    };
};
/**
 * Returns a message for the passed lang and key
 * @param lang
 * @param key
 */
export declare const getMessage: (lang: keyof LangMap, key: keyof MessageMap) => string;
/**
 * Returns a function bound lang to getMessage
 * @param lang
 */
export declare const getBoundMessage: (lang: keyof LangMap) => ((key: keyof MessageMap) => string);
export {};
